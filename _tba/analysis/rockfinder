#!/usr/bin/env python

#Version 12/6/2016
vers = 'rockfinder v1.0'
import requests
import sys
#import pyfits as fits 
import astropy.io.fits as fits
from optparse import OptionParser

def get_args():
	usage = "usage: %prog [options] image.fts"
	parser = OptionParser(usage=usage, description='Program %prog references MPC catalogs for Asteroids and Comets',version = vers)
	parser.add_option('-R', dest = 'RA', metavar='RA', action = 'store', help = 'RA to search hh:mm:ss.ss') 
	parser.add_option('-D', dest = 'DEC', metavar='DEC', action = 'store', help = 'DEC to search'      )
	parser.add_option('-r', dest = 'radius', default = 25, metavar='Radius', action = 'store', help='Radius to search in arcminutes')
	parser.add_option('-m', dest = 'limmag', default = 22,   metavar='LimMag', action = 'store', help = 'Limiting magnitude')
	parser.add_option('-d', dest = 'date',  metavar='date', action = 'store', help = 'Date in yyyy/mm/dd')
	parser.add_option('-t', dest = 'ut', metavar='time', action = 'store', help = 'UT Time in hh:mm:ss.ss')	
	return parser.parse_args()
def get_hdr_info(ftsfile):
	im,hdr = fits.getdata(ftsfile,0,header=True)
	D = hdr['DATE-OBS']; date = D[0:10]; ut = D[11:]
	ra = hdr['RA']; dec = hdr['DEC']
	return date, ut, ra, dec
def substring(string, i, j):
	return string[i:j]
def make2dlist(string):
	objlist = string.split('\n')
	object2d = []
	for index in range(len(objlist) - 1):
		object2d.append([])
		#object name
		object2d[index].append(substring(str(objlist[index]), 0, 24))
		#RA
		object2d[index].append(substring(str(objlist[index]), 24, 36))
		#DEC
		object2d[index].append(substring(str(objlist[index]), 36, 47))
		#Magnitude
		object2d[index].append(substring(str(objlist[index]), 47, 53))
		#RA Offset
		object2d[index].append(substring(str(objlist[index]), 53, 58))
		#DEC Offset
		object2d[index].append(substring(str(objlist[index]), 59, 65))
		#Motion/Hr RA
		object2d[index].append(substring(str(objlist[index]), 70, 73))
		#Motion/Hr DEC
		object2d[index].append(substring(str(objlist[index]), 77, 81))
		#Orbit
		object2d[index].append(substring(str(objlist[index]), 83, 86))
		#Comment
		object2d[index].append(substring(str(objlist[index]), 87, len(objlist[index]) - 1))
	#remove first 4 rows because they are headers	
	del object2d[0:4]
	return object2d
	
#MAIN PROGRAM	
(opts, args) = get_args()
#check for image input
try:
	filename = args[0]
	date, ut, ra, dec = get_hdr_info(filename)
	im,hdr = fits.getdata(filename,0,header=True)
except IndexError:
	#check for necessary options if no image input
	if not opts.RA or not opts.DEC or not opts.ut or not opts.date:
		print("Must specifiy at least -R, -D, -d, and -t if no image specified.")
		exit() 
if opts.RA:
	ra = opts.RA
if opts.DEC:
	dec = opts.DEC
if opts.ut:
	ut = opts.ut
if opts.date:
	date = opts.date
radius = opts.radius
limmag = opts.limmag
#convert RA and DEC to format readable by MPC website
ra = ra.replace(":"," ")
dec = dec.replace(":"," ")
#break date into year, month and day formats readable by MPC website
year = date[0:4]
month = date[5:7]
fullday = float(date[8:10])
halfday = ((float(ut[0:2]) * 3600) + (float(ut[3:5]) * 60) + (float(ut[6:8]))) / 86400.0
day = fullday + halfday
#create arguments to sent to MPC website
payload = {"year": year, "month": month, "day": day,
"which": "pos",
"ra": ra,
"decl": dec,
"TextArea": " ",
"radius": radius,
"limit": limmag,
"oc": "857",
"sort": "d",
"mot": "h",
"tmot": "s",
"pdes": "u",
"needed": "f",
"ps": "n",
"type": "p"}
#send request to MPC website
r = requests.get('http://www.minorplanetcenter.net/cgi-bin/mpcheck.cgi', params=payload)

#check to see if any objects found
if r.text.find("No known minor planets") > 0:
	print("No known minor planets within %s arcminutes and brighter than %s mag of RA:%s DEC:%s on %s at %sUT." % (radius, limmag, ra, dec, date, ut))
else:
	#cut website output down to object table
	objectstring=r.text[r.text.find("<pre>")+5:r.text.find("</pre>")]
	#replace formatting problems
	objectstring = objectstring.replace('&#176;','d')
	objectstring = objectstring.replace('<a href="http://www.cfa.harvard.edu/iau/info/FurtherObs.html">Further observations?</a>',"")
	#make a 2d list of objects for manipulation by other programs
	objectlist = make2dlist(objectstring)
	print("%s objects within %s arcminutes and brighter than %s mag of RA:%s DEC:%s on %s at %s:" % (len(objectlist), radius, limmag, ra, dec, date, ut))
	print(objectstring)
	#for index in range(len(objectlist)):
		#print objectlist[index]

