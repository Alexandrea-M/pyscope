#!/usr/bin/env python

# Run calc-zmag on every valid FITS file in current directory that satisfies coords, filter selections

import sys,glob, os
from astropy.io.fits import getheader

def ck_sdss(hdr):
	''' checks [very roughly] if coords (deg,deg) are in SDSS DR12 photometric survey'''
	ra =  hdr['CRVAL1']
	dec = hdr['CRVAL2']
	r1_ok = 112.5 <= ra <= 255	  and  -5. <= dec <= 65.
	r2_ok = 330.0 <= ra <= 359.99 and  -5  <= dec <= 35.
	r3_ok =	  0.0 <= ra <= 30.0	  and -10. <= dec <= 35. 
	return r1_ok or r2_ok or r3_ok

# === MAIN ====

for ftsfile in glob.glob('*.fts'):
	
	# Make sure bad FTS files don't crash the loop
	try:
	    hdr = getheader(ftsfile, 0)
	except:
	    print '%s: Cannot open, skipping' % ftsfile
	    continue
	
	# Check for valid Sloan filter
	filter =  hdr['FILTER'][0]
	basename = ftsfile.split('.')[0]
	
	ok_filter =	 filter == 'G' or filter == 'R'
	if not ok_filter:
		print '%s: filter %s not supported (only G,R), skipping' % (ftsfile,filter)
		continue
	
	# Skip if ZMAG already calculated
	ok_zmag = not 'ZMAG' in hdr
	if not ok_zmag:
		print '%s: ZMAG already in header, skipping' % ftsfile
		continue
	
	# Needs WCS, skip otherwise
	ok_wcs = 'CRVAL1' in hdr
	if not ok_wcs:
		print '%s: No WCS, skipping' % ftsfile
		continue
	
	# Is image location in SDSS coverage?
	ok_sdss = ck_sdss(hdr)
	if not ok_sdss:
		print '%s: Coordinates not covered in SDSS, skipping' % ftsfile
		continue

	# OK, run calc-zmag then
	print '%s: Running calc-zmag...' % ftsfile
	zmag_lis = '%s.lis' % basename
	os.system('calc-zmag -f %s %s > %s' % (filter, ftsfile, zmag_lis) )
